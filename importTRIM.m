function TRIMOUT = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   TRIMOUT = IMPORTFILE(FILENAME) Reads data from text file FILENAME for
%   the default selection.
%
%   TRIMOUT = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   TRIMOUT = importfile('TRIMOUT.txt', 13, 100010);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/11/13 14:00:18

%% Initialize variables.
if nargin<=2
    startRow = 13;
    endRow = 100010;
end

%% Format for each line of text:
%   column1: categorical (%C)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: text (%s)
%	column8: double (%f)
%   column9: text (%s)
%	column10: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%1C%5f%3f%13f%14f%11f%11f%11f%10f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Remove white space around all cell columns.
% dataArray{7} = strtrim(dataArray{7});
% dataArray{9} = strtrim(dataArray{9});

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
TRIMOUT = table(dataArray{1:end-1});
TRIMOUT.Properties.VariableNames = {'flag','no','type','Ek','x','y','z','cosx','cosy','cosz'};
TRIMOUT.Properties.VariableUnits = {'','','','eV','A','A','A','1','1','1'};
TRIMOUT.Properties.VariableDescriptions = {'Status','No.Ion','Atom','Energy','X','Y','Z','COSX','COSY','COSZ'};